{"version":3,"sources":["logo.svg","services/auth.service.js","services/history.js","components/login.jsx","components/profile.jsx","services/auth-header.js","services/user.service.js","components/parkinglist.jsx","components/users.jsx","components/transactions.jsx","components/reports.jsx","components/home.jsx","components/register.jsx","privateRoutes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","logout","localStorage","removeItem","handleResponse","response","text","then","data","JSON","parse","status","window","location","reload","error","message","statusText","console","log","Promise","reject","toFormData","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","name","phone","email","password","fetch","API_USERS","headers","method","body","token","setItem","stringify","getItem","history","createBrowserHistory","LoginComponent","props","useState","loading","setLoading","style","width","src","className","initialValues","remember","onFinish","values","AuthService","toString","Item","rules","required","prefix","UserOutlined","type","placeholder","LockOutlined","tip","htmlType","Profile","_id","size","column","bordered","title","label","authHeader","user","API_URL","auth","idUser","firstDate","secondDate","idParking","Parking","parkings","setParkings","useEffect","UserServices","gutter","undefined","map","el","key","id","span","height","address","Users","users","setUsers","onClick","pays","paysUser","Modal","info","content","length","ticket","background","amount","created_at","onOk","Transactions","transactions","settransactions","openNotificationWithIcon","description","notification","warning","Reports","reports","setReports","Form","useForm","form","dateFormat","userService","moment","format","Option","value","resetFields","color","border","filename","dataSource","columns","dataIndex","TabPane","Tabs","Home","currentUser","defaultActiveKey","tabPosition","tab","SinginComponent","success","icon","SmileOutlined","PrivateRoute","Component","component","rest","render","to","Header","Layout","Content","Footer","App","setCurrentUser","textAlign","logo","alt","theme","mode","defaultSelectedKeys","padding","exact","path","Login","Signin","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9a2041f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const API_USERS = \"http://localhost:3000/users\";\r\n\r\nconst register = (name, phone, email, password) => {\r\n  const data = {\r\n    email,\r\n    password,\r\n    name,\r\n    phone,\r\n  };\r\n\r\n  const formBody = toFormData(data);\r\n\r\n  const headers = {\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n    },\r\n    method: \"POST\",\r\n    body: formBody,\r\n  };\r\n\r\n  return fetch(API_USERS + \"/register\", headers);\r\n};\r\n\r\nconst login = (email, password) => {\r\n  const data = {\r\n    email,\r\n    password,\r\n  };\r\n  const formBody = toFormData(data);\r\n\r\n  const headers = {\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n    },\r\n    method: \"POST\",\r\n    body: formBody,\r\n  };\r\n\r\n  return fetch(API_USERS + \"/authenticate\", headers)\r\n    .then(handleResponse)\r\n    .then((data) => {\r\n      console.log(data.data);\r\n      if (data.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(data.data));\r\n      }\r\n\r\n      return data.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n    if (response.status !== 200) {\r\n      if (response.status === 401 || response.status === 500) {\r\n        // auto logout if 401 response returned from api\r\n        logout();\r\n        window.location.reload(\"/\");\r\n        //!Activar la redireccion!!\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      console.log(error);\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n\r\nfunction toFormData(data) {\r\n  let formBody = [];\r\n  for (let property in data) {\r\n    let encodedKey = encodeURIComponent(property);\r\n    let encodedValue = encodeURIComponent(data[property]);\r\n    formBody.push(encodedKey + \"=\" + encodedValue);\r\n  }\r\n  return (formBody = formBody.join(\"&\"));\r\n}\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React, { useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./login.css\";\r\nimport { history } from \"../services/history\";\r\n\r\nconst LoginComponent = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    setLoading(true);\r\n\r\n    const { email, password } = values;\r\n\r\n    AuthService.login(email, password).then(\r\n      () => {\r\n        history.push(\"/home\");\r\n        window.location.reload();\r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setLoading(false);\r\n        //setMessage(resMessage);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <center>\r\n      <img style={{width:\"25%\"}} src={\"https://pngimg.com/uploads/welcome/welcome_PNG48.png\"}></img>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          {loading ? (\r\n            <Spin tip=\"Loading...\"></Spin>\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n    </center>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Descriptions } from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst Profile = (props) =>{\r\n    console.log(props.props)\r\n\r\n    const {name, phone, email, _id} = props.props\r\n\r\n    return(\r\n        <div className=\"site-card-wrapper\">\r\n            <center >\r\n\r\n            <Avatar src=\"https://i0.wp.com/wipy.tv/wp-content/uploads/2020/08/nueva-imagen-de-la-secuela-de-avatar.jpg?w=1000&ssl=1\"  size={150}  />\r\n            \r\n        <Descriptions column={2}  bordered={true} style={{\"paddingTop\":\"5%\"}} title=\"User Info\">\r\n        <Descriptions.Item  label=\"UserName\">{name}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Telephone\">{phone}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Email\">{email}</Descriptions.Item>\r\n        <Descriptions.Item  label=\"Id\">{_id}</Descriptions.Item>\r\n      </Descriptions>\r\n      </center>\r\n      </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.token) {\r\n      return { 'x-access-token': user.token ,\r\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\r\n    };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  ","import authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:3000\";\r\n\r\nconst getParkings = () => {\r\n  console.log(authHeader());\r\n\r\n  const auth = authHeader();\r\n\r\n  console.log(auth);\r\n\r\n  return fetch(API_URL + \"/getparking\", { method: \"POST\", headers: auth }).then(\r\n    handleResponse\r\n  );\r\n};\r\n\r\nconst getUsers = () => {\r\n  const auth = authHeader();\r\n\r\n  console.log(auth);\r\n\r\n  return fetch(API_URL + \"/users/all\", { method: \"POST\", headers: auth }).then(\r\n    handleResponse\r\n  );\r\n};\r\n\r\nconst getAllTransactionsByUser = (idUser) => {\r\n  const data = {\r\n    idUser,\r\n  };\r\n  const auth = authHeader();\r\n\r\n  const formBody = toFormData(data);\r\n  console.log(formBody);\r\n\r\n  return fetch(API_URL + \"/pay/getByUser\", {\r\n    method: \"POST\",\r\n    body: formBody,\r\n    headers: auth,\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst getTransactions = () => {\r\n  const auth = authHeader();\r\n\r\n  console.log(auth);\r\n\r\n  return fetch(API_URL + \"/pay/getAllPays\", {\r\n    method: \"POST\",\r\n    headers: auth,\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst getAllbyDates = (firstDate, secondDate) => {\r\n  const data = {\r\n    firstDate,\r\n    secondDate,\r\n  };\r\n  const auth = authHeader();\r\n  const formBody = toFormData(data);\r\n  console.log(formBody);\r\n\r\n  return fetch(API_URL + \"/pay/getByDates\", {\r\n    method: \"POST\",\r\n    body: formBody,\r\n    headers: auth,\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst getAllbyParking = (idParking) => {\r\n  const data = {\r\n    idParking,\r\n  };\r\n  const auth = authHeader();\r\n  const formBody = toFormData(data);\r\n  console.log(formBody);\r\n\r\n  return fetch(API_URL + \"/pay/getByParking\", {\r\n    method: \"POST\",\r\n    body: formBody,\r\n    headers: auth,\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst getAllByDatesAndParking = (firstDate, secondDate, idParking) => {\r\n  const data = {\r\n    firstDate,\r\n    secondDate,\r\n    idParking,\r\n  };\r\n  const auth = authHeader();\r\n  const formBody = toFormData(data);\r\n  console.log(formBody);\r\n\r\n  return fetch(API_URL + \"/pay/getByDateAndParking\", {\r\n    method: \"POST\",\r\n    body: formBody,\r\n    headers: auth,\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nfunction toFormData(data) {\r\n  var formBody = [];\r\n  for (let property in data) {\r\n    let encodedKey = encodeURIComponent(property);\r\n    let encodedValue = encodeURIComponent(data[property]);\r\n    formBody.push(encodedKey + \"=\" + encodedValue);\r\n  }\r\n  return (formBody = formBody.join(\"&\"));\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n    if (response.status !== 200) {\r\n      if (response.status === 401 || response.status === 500) {\r\n        // auto logout if 401 response returned from api\r\n        logout();\r\n        window.location.reload(\"/\");\r\n        //!Activar la redireccion!!\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      console.log(error);\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (data.message === \"jwt expired\") {\r\n      logout();\r\n      window.location.reload(\"/\");\r\n    } else {\r\n      return data;\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getUsers,\r\n  getAllTransactionsByUser,\r\n  getTransactions,\r\n  getAllbyDates,\r\n  getAllbyParking,\r\n  getAllByDatesAndParking,\r\n  getParkings,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserServices from \"../services/user.service\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./login.css\";\r\nimport { Spin } from \"antd\";\r\nimport { Card, Col, Row } from \"antd\";\r\n\r\nconst Parking = (props) => {\r\n  console.log(props.props);\r\n\r\n  const [parkings, setParkings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    UserServices.getParkings().then((data) => {\r\n      console.log(data.data);\r\n      setParkings(data.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n      {loading && (\r\n        <center style={{ \"padding-top\": \"25%\" }}>\r\n          <Spin size=\"large\" tip=\"Loading...\"></Spin>\r\n        </center>\r\n      )}\r\n      <Row gutter={16}>\r\n        {parkings !== undefined &&\r\n          parkings.map((el) => {\r\n            return (\r\n              <Col key={el.id} span={8}>\r\n                <Card\r\n                  style={{ height: 250, \"margin-top\": \"10%\" }}\r\n                  title={el.name}\r\n                  bordered={true}\r\n                >\r\n                  <p>{el.id}</p>\r\n                  <p>\r\n                    <b>{el.address}</b>\r\n                  </p>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Parking;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserServices from \"../services/user.service\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./login.css\";\r\nimport { Spin } from \"antd\";\r\nimport { Card, Col, Row } from \"antd\";\r\nimport { Modal, Button } from \"antd\";\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    UserServices.getUsers().then((data) => {\r\n      console.log(data.data.Users);\r\n      setUsers(data.data.Users);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const info = (props) => {\r\n    console.log(props);\r\n    UserServices.getAllTransactionsByUser(props).then((data) => {\r\n      const pays = data.data.paysUser;\r\n      console.log(pays);\r\n      return Modal.info({\r\n        title: \"Transacciones\",\r\n        content: (\r\n          <div>\r\n            {pays.length !== 0 ? (\r\n              pays.map((el) => {\r\n                let title = `Ticket: ${el.ticket}`;\r\n                return (\r\n                  <Card\r\n                    key={el.id}\r\n                    style={{\r\n                      height: 250,\r\n                      width: \"90%\",\r\n                      \"margin-top\": \"5%\",\r\n                      background: \"#DCF3FD\",\r\n                    }}\r\n                    title={title}\r\n                    bordered={true}\r\n                  >\r\n                    <p>\r\n                      Cantidad: <b>{el.amount}</b>\r\n                    </p>\r\n                    <p>\r\n                      Fecha <b>{el.created_at}</b>\r\n                    </p>\r\n                    <p>\r\n                      Id Estacionamiento <b>{el.idParking}</b>\r\n                    </p>\r\n                  </Card>\r\n                );\r\n              })\r\n            ) : (\r\n              <b>Usuario sin transacciones</b>\r\n            )}\r\n          </div>\r\n        ),\r\n        onOk() {},\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n      {loading && (\r\n        <center style={{ \"padding-top\": \"25%\" }}>\r\n          <Spin size=\"large\" tip=\"Loading...\"></Spin>\r\n        </center>\r\n      )}\r\n      <Row gutter={16}>\r\n        {users !== undefined &&\r\n          users.map((el) => {\r\n            return (\r\n              <Col key={el.id} span={8}>\r\n                <Card\r\n                  style={{ height: 250, \"margin-top\": \"10%\" }}\r\n                  title={el.name}\r\n                  bordered={true}\r\n                >\r\n                  <p>{el.email}</p>\r\n                  <p>\r\n                    <b>{el.phone}</b>\r\n                  </p>\r\n                  <p>{el.id}</p>\r\n                  <Button onClick={() => info(el.id)}>Info</Button>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserServices from \"../services/user.service\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./login.css\";\r\nimport { Spin } from \"antd\";\r\nimport { Card, Col, Row } from \"antd\";\r\n\r\nconst Transactions = (props) => {\r\n  console.log(props.props);\r\n\r\n  const [transactions, settransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    UserServices.getTransactions().then((data) => {\r\n      console.log(data.data);\r\n      settransactions(data.data.Transactions);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n      {loading && (\r\n        <center style={{ \"padding-top\": \"25%\" }}>\r\n          <Spin size=\"large\" tip=\"Loading...\"></Spin>\r\n        </center>\r\n      )}\r\n      <Row gutter={16}>\r\n        {transactions !== undefined &&\r\n          transactions.map((el) => {\r\n            let title = `Ticket: ${el.ticket}`;\r\n            return (\r\n              <Col key={el.id} span={8}>\r\n                <Card\r\n                  key={el.id}\r\n                  style={{ height: 300, width: \"90%\", \"margin-top\": \"10%\" }}\r\n                  title={title}\r\n                  bordered={true}\r\n                >\r\n                  <p>\r\n                    Cantidad: <b>{el.amount}</b>\r\n                  </p>\r\n                  <p>\r\n                    Fecha: <b>{el.created_at}</b>\r\n                  </p>\r\n                  <p>\r\n                    Id Estacionamiento: <b>{el.idParking}</b>\r\n                  </p>\r\n                  <p>\r\n                    Id Usuario: <b>{el.idUser}</b>\r\n                  </p>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Select } from \"antd\";\r\nimport { Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./login.css\";\r\nimport { DatePicker } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { notification } from \"antd\";\r\nimport UserServices from \"../services/user.service\";\r\nimport userService from \"../services/user.service\";\r\nimport { Table } from \"antd\";\r\nimport CsvDownload from \"react-json-to-csv\";\r\n\r\n\r\nconst openNotificationWithIcon = (message, description) => {\r\n  notification.warning({\r\n    message: message,\r\n    description: description,\r\n  });\r\n};\r\n\r\nconst Reports = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [parkings, setParkings] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n\r\n  useEffect(() => {\r\n    UserServices.getParkings().then((data) => {\r\n      console.log(data.data);\r\n      setParkings(data.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    let { firstDate, secondDate, idParking } = values;\r\n\r\n    console.log(values);\r\n\r\n    if (firstDate !== undefined && secondDate === undefined) {\r\n      console.log(\"Está entrando al if\");\r\n      openNotificationWithIcon(\"Error\", \"Debe seleccionar fecha final\");\r\n    } else if (firstDate === undefined && secondDate !== undefined) {\r\n      console.log(\"Está entrando al if\");\r\n      openNotificationWithIcon(\"Error\", \"Debe seleccionar fecha inicial\");\r\n    } else if (\r\n      idParking !== undefined &&\r\n      firstDate === undefined &&\r\n      secondDate === undefined\r\n    ) {\r\n      setLoading(true);\r\n      console.log(\"Aquí va la consilta por ID\");\r\n      console.log(idParking);\r\n      userService.getAllbyParking(idParking).then((data) => {\r\n        console.log(data.data.paysUser);\r\n\r\n        setReports(data.data.paysUser);\r\n        setLoading(false);\r\n      });\r\n    } else if (\r\n      idParking === undefined &&\r\n      firstDate !== undefined &&\r\n      secondDate !== undefined\r\n    ) {\r\n      setLoading(true);\r\n      console.log(\"Aquí va la función con fechas\");\r\n\r\n      firstDate = moment(firstDate).format(dateFormat);\r\n      secondDate = moment(secondDate).format(dateFormat);\r\n\r\n      userService.getAllbyDates(firstDate, secondDate).then((data) => {\r\n        console.log(data.data.paysUser);\r\n\r\n        setReports(data.data.paysUser);\r\n        setLoading(false);\r\n      });\r\n    } else if (\r\n      idParking !== undefined &&\r\n      firstDate !== undefined &&\r\n      secondDate !== undefined\r\n    ) {\r\n      setLoading(true);\r\n\r\n      console.log(\"Aquí va la función con fechas y ID\");\r\n\r\n      firstDate = moment(firstDate).format(dateFormat);\r\n      secondDate = moment(secondDate).format(dateFormat);\r\n      userService\r\n        .getAllByDatesAndParking(firstDate, secondDate, idParking)\r\n        .then((data) => {\r\n          console.log(data.data.paysUser);\r\n\r\n          setReports(data.data.paysUser);\r\n          setLoading(false);\r\n        });\r\n    }\r\n\r\n    const { email, password } = values;\r\n  };\r\n\r\n  const dateFormat = \"YYYY/MM/DD\";\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Estacionamiento\",\r\n      dataIndex: \"idParking\",\r\n      key: \"idParking\",\r\n    },\r\n    {\r\n      title: \"Ticket\",\r\n      dataIndex: \"ticket\",\r\n      key: \"ticket\",\r\n    },\r\n    {\r\n      title: \"Cantidad\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n    },\r\n    {\r\n      title: \"Fecha de movimiento\",\r\n      dataIndex: \"created_at\",\r\n      key: \"created_at\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n      <center>\r\n        <Form\r\n          form={form}\r\n          name=\"normal_login\"\r\n          className=\"login-form-report\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item name=\"firstDate\" label=\"Seleccione fecha inicial\">\r\n            <DatePicker />\r\n          </Form.Item>\r\n          <Form.Item name=\"secondDate\" label=\"Seleccione fecha final\">\r\n            <DatePicker />\r\n          </Form.Item>\r\n          <Form.Item name=\"idParking\" label=\"Seleccione Estacionamiento\">\r\n            <Select>\r\n              {parkings !== undefined &&\r\n                parkings.map((el) => {\r\n                  return (\r\n                    <Select.Option key={el.id} value={el.id}>\r\n                      {el.name}\r\n                    </Select.Option>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            {loading ? (\r\n              <Spin tip=\"Loading...\"></Spin>\r\n            ) : (\r\n              <div>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Consultar\r\n                </Button>\r\n                <Button htmlType=\"button\" onClick={onReset}>\r\n                  Reset\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Form.Item>\r\n        </Form>\r\n      </center>\r\n      {reports.length !== 0 && (\r\n        <CsvDownload\r\n          style={{\r\n            color: \"#fff\",\r\n            background: \"#1890ff\",\r\n            \"border-color\": \"#1890ff\",\r\n            border: \"none\",\r\n            width: \"100%\",\r\n            height: 32,\r\n          }}\r\n          data={reports}\r\n          filename=\"report.csv\"\r\n        >\r\n          Descargar data en CSV\r\n        </CsvDownload>\r\n      )}\r\n      {reports !== undefined && (\r\n        <Table dataSource={reports} columns={columns} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport 'antd/dist/antd.css';\r\nimport \"./login.css\"\r\nimport { Tabs } from 'antd';\r\nimport Profile from \"./profile\"\r\nimport Parkings from \"./parkinglist\"\r\nimport Users from \"./users\"\r\nimport Transactions from \"./transactions\"\r\nimport Reports from \"./reports\"\r\nimport {\r\n    HomeOutlined,\r\n    SettingFilled,\r\n    SmileOutlined,\r\n    SyncOutlined,\r\n    LoadingOutlined,\r\n    HomeTwoTone\r\n  } from '@ant-design/icons';\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n    const currentUser = AuthService.getCurrentUser();\r\n    console.log(currentUser.token)\r\n       \r\n             \r\n    return (\r\n        <div>\r\n\r\n          \r\n       \r\n        <Tabs  defaultActiveKey=\"1\" tabPosition={\"left\"} style={{ height: \"100%\" }}>\r\n        \r\n        <TabPane tab=\"Profile\" key={1} >\r\n            <Profile props={currentUser.user} />\r\n            \r\n        </TabPane>\r\n          <TabPane tab=\"Parkings\" key={2} >\r\n            <Parkings props= {currentUser.token}/>\r\n          </TabPane>\r\n          <TabPane tab=\"Users\" key={3} >\r\n            <Users/>\r\n          </TabPane>\r\n          <TabPane tab=\"Transactions\" key={4} >\r\n            <Transactions/>\r\n          </TabPane>\r\n          <TabPane tab=\"Report\" key={5} >\r\n            <Reports/>\r\n          </TabPane>\r\n        \r\n      </Tabs>\r\n        \r\n  \r\n        </div>\r\n      );\r\n\r\n        \r\n\r\n \r\n  };\r\n  \r\n  export default Home;","import React, { useState } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./login.css\";\r\nimport { notification } from \"antd\";\r\nimport { SmileOutlined } from \"@ant-design/icons\";\r\n\r\nconst openNotification = () => {\r\n  notification.success({\r\n    message: \"Successfull\",\r\n    description:\r\n      \"Your account has been created successfully. Now you can enter with your email and password\",\r\n    icon: <SmileOutlined style={{ color: \"#108ee9\" }} />,\r\n  });\r\n};\r\n\r\nconst SinginComponent = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    setLoading(true);\r\n\r\n    const { email, password, name, phone } = values;\r\n\r\n    AuthService.register(name, phone, email, password).then(\r\n      () => {\r\n        console.log(\"salió perrón\");\r\n        openNotification();\r\n        props.history.push(\"/\");\r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <center>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Name\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"phone\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Phone!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Phone\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          {loading ? (\r\n            <Spin tip=\"Loading...\"></Spin>\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n    </center>\r\n  );\r\n};\r\n\r\nexport default SinginComponent;\r\n","import React from \"react\"\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    \r\n    <Route {...rest} render={(props) => (\r\n        user && user.token\r\n        ? <Component {...props} />\r\n        : <Redirect to='/' />\r\n    )} />\r\n  )\r\n\r\nexport default PrivateRoute","import \"./App.css\";\nimport Login from \"./components/login\";\nimport Home from \"./components/home\";\nimport Signin from \"./components/register\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport AuthService from \"./services/auth.service\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu } from \"antd\";\nimport {history} from \"./services/history\"\nimport PrivateRouter from './privateRoutes'\nimport logo from './logo.svg'\n\nconst { Header, Content, Footer } = Layout;\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(undefined);\n // const [out, setOut] = useState(false)\n  console.log(currentUser);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n    }\n  }, []);\n\n \n\n  const logOut = () => {\n    AuthService.logout();\n    setCurrentUser(undefined)\n\n  };\n\n  return (\n    <div className=\"principalContainer\">\n      <Layout className=\"layout\">\n        <Header style={{ textAlign: \"left\" }}>\n          <div className=\"logo\" ><img src={logo} className=\"App-logo\" alt=\"logo\" /></div>\n\n          {currentUser ? (\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n              <Menu.Item key=\"3\">\n                <Link onClick={logOut} to={\"/\"} className=\"nav-link\">\n                  Logout\n                </Link>\n              </Menu.Item>\n            </Menu>\n          ) : (\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n              <Menu.Item key=\"1\">\n                <Link to={\"/\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to={\"/singin\"} className=\"nav-link\">\n                  Signin\n                </Link>\n              </Menu.Item>\n            </Menu>\n          )}\n        </Header>\n        <Content style={{ padding: \"0 50px\" }}>\n          <div className=\"site-layout-content\">\n          \n            <Switch history={history}>\n              <PrivateRouter exact path=\"/home\" component={Home} />\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path=\"/singin\" component={Signin} />\n            </Switch>\n           \n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>WebApp to Clivo</Footer>\n      </Layout>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}